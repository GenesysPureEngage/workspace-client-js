/**
 * Workspace Application API
 * Application API used by Workspace Web Edition
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ApiErrorResponse', 'model/ApiSuccessResponse', 'model/Parameters3'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ApiErrorResponse'), require('../model/ApiSuccessResponse'), require('../model/Parameters3'));
  } else {
    // Browser globals (root is window)
    if (!root.WorkspaceApplicationApi) {
      root.WorkspaceApplicationApi = {};
    }
    root.WorkspaceApplicationApi.VoiceCallForwardingApi = factory(root.WorkspaceApplicationApi.ApiClient, root.WorkspaceApplicationApi.ApiErrorResponse, root.WorkspaceApplicationApi.ApiSuccessResponse, root.WorkspaceApplicationApi.Parameters3);
  }
}(this, function(ApiClient, ApiErrorResponse, ApiSuccessResponse, Parameters3) {
  'use strict';

  /**
   * VoiceCallForwarding service.
   * @module api/VoiceCallForwardingApi
   * @version 1.0.0
   */

  /**
   * Constructs a new VoiceCallForwardingApi. 
   * @alias module:api/VoiceCallForwardingApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the cancelForward operation.
     * @callback module:api/VoiceCallForwardingApi~cancelForwardCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiSuccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel active forward
     * @param {module:api/VoiceCallForwardingApi~cancelForwardCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiSuccessResponse}
     */
    this.cancelForward = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ApiSuccessResponse;

      return this.apiClient.callApi(
        '/voice/cancel-forward', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the forward operation.
     * @callback module:api/VoiceCallForwardingApi~forwardCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiSuccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Forward to other dn
     * @param {module:model/Parameters3} parameters Request parameters.
     * @param {module:api/VoiceCallForwardingApi~forwardCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiSuccessResponse}
     */
    this.forward = function(parameters, callback) {
      var postBody = parameters;

      // verify the required parameter 'parameters' is set
      if (parameters == undefined || parameters == null) {
        throw new Error("Missing the required parameter 'parameters' when calling forward");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ApiSuccessResponse;

      return this.apiClient.callApi(
        '/voice/set-forward', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
