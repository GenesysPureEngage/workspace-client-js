/**
 * Workspace API
 * Application API used by Workspace Web Edition
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['workspace/ApiClient', 'workspace/model/Kvpair'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Kvpair'));
  } else {
    // Browser globals (root is window)
    if (!root.WorkspaceApi) {
      root.WorkspaceApi = {};
    }
    root.WorkspaceApi.UcsfindorcreatephonecallData = factory(root.WorkspaceApi.ApiClient, root.WorkspaceApi.Kvpair);
  }
}(this, function(ApiClient, Kvpair) {
  'use strict';




  /**
   * The UcsfindorcreatephonecallData model module.
   * @module workspace/model/UcsfindorcreatephonecallData
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>UcsfindorcreatephonecallData</code>.
   * @alias module:workspace/model/UcsfindorcreatephonecallData
   * @class
   * @param callId {String} The id of the call
   * @param contactId {String} The id of the contact
   * @param type {String} The type of the call
   * @param status {String} The status of the call
   * @param userData {Array.<module:workspace/model/Kvpair>} A key/value pairs list of the user data of the call.
   */
  var exports = function(callId, contactId, type, status, userData) {
    var _this = this;

    _this['callId'] = callId;
    _this['contactId'] = contactId;
    _this['type'] = type;
    _this['status'] = status;




    _this['userData'] = userData;
  };

  /**
   * Constructs a <code>UcsfindorcreatephonecallData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:workspace/model/UcsfindorcreatephonecallData} obj Optional instance to populate.
   * @return {module:workspace/model/UcsfindorcreatephonecallData} The populated <code>UcsfindorcreatephonecallData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('callId')) {
        obj['callId'] = ApiClient.convertToType(data['callId'], 'String');
      }
      if (data.hasOwnProperty('contactId')) {
        obj['contactId'] = ApiClient.convertToType(data['contactId'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('phoneNumber')) {
        obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
      }
      if (data.hasOwnProperty('parentId')) {
        obj['parentId'] = ApiClient.convertToType(data['parentId'], 'String');
      }
      if (data.hasOwnProperty('threadId')) {
        obj['threadId'] = ApiClient.convertToType(data['threadId'], 'String');
      }
      if (data.hasOwnProperty('subject')) {
        obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
      }
      if (data.hasOwnProperty('userData')) {
        obj['userData'] = ApiClient.convertToType(data['userData'], [Kvpair]);
      }
    }
    return obj;
  }

  /**
   * The id of the call
   * @member {String} callId
   */
  exports.prototype['callId'] = undefined;
  /**
   * The id of the contact
   * @member {String} contactId
   */
  exports.prototype['contactId'] = undefined;
  /**
   * The type of the call
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * The status of the call
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * The phone number of the call
   * @member {String} phoneNumber
   */
  exports.prototype['phoneNumber'] = undefined;
  /**
   * The id of the parent interaction
   * @member {String} parentId
   */
  exports.prototype['parentId'] = undefined;
  /**
   * The thread id
   * @member {String} threadId
   */
  exports.prototype['threadId'] = undefined;
  /**
   * The subject of the call
   * @member {String} subject
   */
  exports.prototype['subject'] = undefined;
  /**
   * A key/value pairs list of the user data of the call.
   * @member {Array.<module:workspace/model/Kvpair>} userData
   */
  exports.prototype['userData'] = undefined;



  return exports;
}));


